apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "1"
  creationTimestamp: "2023-05-28T20:51:06Z"
  generation: 1
  labels:
    app.kubernetes.io/name: opentelemetry-operator
    control-plane: controller-manager
    olm.deployment-spec-hash: 6f6c68645d
    olm.owner: opentelemetry-operator.v0.77.0
    olm.owner.kind: ClusterServiceVersion
    olm.owner.namespace: test-space
    operators.coreos.com/opentelemetry-operator.test-space: ""
  name: opentelemetry-operator-controller-manager
  namespace: test-space
  ownerReferences:
  - apiVersion: operators.coreos.com/v1alpha1
    blockOwnerDeletion: false
    controller: false
    kind: ClusterServiceVersion
    name: opentelemetry-operator.v0.77.0
    uid: b8cedac8-22b5-475f-9547-4057c9c215f4
  resourceVersion: "38787683"
  uid: fb11c819-e410-41fd-8ebc-57089cafccd7
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: opentelemetry-operator
      control-plane: controller-manager
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        alm-examples: |-
          [
            {
              "apiVersion": "opentelemetry.io/v1alpha1",
              "kind": "Instrumentation",
              "metadata": {
                "name": "instrumentation"
              },
              "spec": {
                "exporter": {
                  "endpoint": "http://otel-collector-headless:4317"
                }
              }
            },
            {
              "apiVersion": "opentelemetry.io/v1alpha1",
              "kind": "OpenTelemetryCollector",
              "metadata": {
                "name": "otel"
              },
              "spec": {
                "config": "receivers:\n  otlp:\n    protocols: \n      grpc:\n      http:\n\nexporters:\n  logging:\n\nservice:\n  pipelines:\n    traces:\n      receivers: [otlp]\n      exporters: [logging]\n"
              }
            }
          ]
        capabilities: Basic Install
        categories: Logging & Tracing
        certified: "false"
        containerImage: ghcr.io/open-telemetry/opentelemetry-operator/opentelemetry-operator
        createdAt: "2023-05-15T08:04:44Z"
        description: Provides the OpenTelemetry components, including the Collector
        olm.operatorGroup: test-space-lj47g
        olm.operatorNamespace: test-space
        olm.targetNamespaces: test-space
        olmcahash: a5599e28f6099a97bcb71f956ed143d616dc424dc537db6e55d7da3215984a9b
        operatorframework.io/properties: '{"properties":[{"type":"olm.package","value":{"packageName":"opentelemetry-operator","version":"0.77.0"}},{"type":"olm.gvk","value":{"group":"opentelemetry.io","kind":"Instrumentation","version":"v1alpha1"}},{"type":"olm.gvk","value":{"group":"opentelemetry.io","kind":"OpenTelemetryCollector","version":"v1alpha1"}}]}'
        operators.operatorframework.io/builder: operator-sdk-v1.27.0
        operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
        repository: github.com/open-telemetry/opentelemetry-operator
        support: OpenTelemetry Community
      creationTimestamp: null
      labels:
        app.kubernetes.io/name: opentelemetry-operator
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --metrics-addr=127.0.0.1:8080
        - --enable-leader-election
        - --zap-log-level=info
        - --zap-time-encoding=rfc3339nano
        - --feature-gates=+operator.autoinstrumentation.go
        env:
        - name: OPERATOR_CONDITION_NAME
          value: opentelemetry-operator.v0.77.0
        image: ghcr.io/open-telemetry/opentelemetry-operator/opentelemetry-operator:0.77.0
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 15
          periodSeconds: 20
          successThreshold: 1
          timeoutSeconds: 1
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: webhook-cert
        - mountPath: /apiserver.local.config/certificates
          name: apiservice-cert
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=0
        env:
        - name: OPERATOR_CONDITION_NAME
          value: opentelemetry-operator.v0.77.0
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.13.0
        imagePullPolicy: IfNotPresent
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 5m
            memory: 64Mi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /apiserver.local.config/certificates
          name: apiservice-cert
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: webhook-cert
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: opentelemetry-operator-controller-manager
      serviceAccountName: opentelemetry-operator-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: cert
        secret:
          defaultMode: 420
          secretName: opentelemetry-operator-controller-manager-service-cert
      - name: apiservice-cert
        secret:
          defaultMode: 420
          items:
          - key: tls.crt
            path: apiserver.crt
          - key: tls.key
            path: apiserver.key
          secretName: opentelemetry-operator-controller-manager-service-cert
      - name: webhook-cert
        secret:
          defaultMode: 420
          items:
          - key: tls.crt
            path: tls.crt
          - key: tls.key
            path: tls.key
          secretName: opentelemetry-operator-controller-manager-service-cert
status:
  conditions:
  - lastTransitionTime: "2023-05-28T20:51:06Z"
    lastUpdateTime: "2023-05-28T20:51:06Z"
    message: Deployment does not have minimum availability.
    reason: MinimumReplicasUnavailable
    status: "False"
    type: Available
  - lastTransitionTime: "2023-05-28T20:51:06Z"
    lastUpdateTime: "2023-05-28T20:51:06Z"
    message: ReplicaSet "opentelemetry-operator-controller-manager-65c5f99f4" is progressing.
    reason: ReplicaSetUpdated
    status: "True"
    type: Progressing
  observedGeneration: 1
  replicas: 1
  unavailableReplicas: 1
  updatedReplicas: 1
